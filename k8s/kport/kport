#!/bin/bash

set -e

# --- Step 0: Azure environment ---
export AZURE_CONFIG_DIR="$HOME/.azure-bp"
echo "üè¶ Azure environment switched to Banco Pichincha (AZURE_CONFIG_DIR=$AZURE_CONFIG_DIR)"

# --- Defaults ---
NAMESPACE="identity"
MAPPING_FILE="$HOME/port-mapping.csv"
PREFIX=""
ENV=""

# --- Parse arguments ---
while [[ $# -gt 0 ]]; do
  case "$1" in
    --prefix=*)
      PREFIX="${1#*=}"
      shift
      ;;
    --namespace=*)
      NAMESPACE="${1#*=}"
      shift
      ;;
    --env=*)
      ENV="${1#*=}"
      shift
      ;;
    -m)
      MAPPING_FILE="$2"
      shift 2
      ;;
    *)
      echo "‚ùå Unknown argument: $1"
      exit 1
      ;;
  esac
done

# --- Validate prefix ---
if [[ -z "$PREFIX" ]]; then
  echo "‚ùå Missing required argument: --prefix"
  exit 1
fi

# --- Validate mapping file ---
if [[ ! -f "$MAPPING_FILE" ]]; then
  echo "‚ùå Mapping file not found: $MAPPING_FILE"
  exit 1
fi

# --- Optional: switch Kubernetes context based on env ---
if [[ -n "$ENV" ]]; then
  case "$ENV" in
    dev)
      CONTEXT="aks-dev-coe-seguridad"
      ;;
    test)
      CONTEXT="aks-test-coe-seguridad"
      ;;
    prod)
      CONTEXT="aks-prod-coe-seguridad"
      ;;
    *)
      echo "‚ùå Invalid --env value: $ENV. Allowed: dev, test, prod"
      exit 1
      ;;
  esac

  echo "üîÑ Switching Kubernetes context to: $CONTEXT"
  kubectl config use-context "$CONTEXT"
fi

# --- Get first matching pod ---
echo "üîç Searching for pod in namespace '$NAMESPACE' with prefix '${PREFIX}-'..."
POD=$(kubectl get pods -n "$NAMESPACE" --no-headers -o custom-columns=":metadata.name" | grep "${PREFIX}-" | head -n 1)

if [[ -z "$POD" ]]; then
  echo "‚ùå No pod found with prefix '$PREFIX-' in namespace '$NAMESPACE'"
  exit 1
fi

echo "‚úÖ Found pod: $POD"

# --- Extract base name before random ID ---
BASE_NAME="${POD%-*}"

# --- Look up port in CSV ---
MAPPED_PORT=$(awk -F',' -v name="$BASE_NAME" '$1 == name { print $2 }' "$MAPPING_FILE")

if [[ -z "$MAPPED_PORT" ]]; then
  echo "‚ùå No mapped port found for pod base name '$BASE_NAME' in $MAPPING_FILE"
  exit 1
fi

# --- Run port-forward ---
REMOTE_PORT=8080
echo "üåê Forwarding localhost:$MAPPED_PORT ‚Üí pod/$POD:$REMOTE_PORT (namespace: $NAMESPACE)"
kubectl port-forward -n "$NAMESPACE" "pod/$POD" "$MAPPED_PORT:$REMOTE_PORT"
